<Page x:Class="LCModManager.CreateProfilePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:LCModManager"
      xmlns:converters="clr-namespace:LCModManager.Converters"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      x:Name="Profiles"
      Title="Profile Page">
    <Page.Resources>
        <converters:ModProfileConverter x:Key="ProfileStrConverter" />
    </Page.Resources>
    <Grid>
        <ToolBar ToolBarTray.IsLocked="True" VerticalAlignment="Top" Height="40" FontSize="12" Grid.ColumnSpan="2">
            <ToolBar.Resources>
                <Style x:Key="ProfilesComboBoxStyle" TargetType="ComboBox">
                    <Setter Property="Text" Value="{Binding Path=Name}" />
                    <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
                    <Setter Property="MinWidth" Value="100" />
                    <Setter Property="Margin" Value="10,0,10,0" />
                </Style>
            </ToolBar.Resources>
            <Button x:Name="AddProfileButton" Style="{StaticResource ToolBarButton}">
                <Button.ContextMenu>
                    <ContextMenu x:Name="AddProfileMenu">
                        <MenuItem x:Name="CreateProfileButton" Header="Create New Profile..." Click="CreateProfileButton_Click"/>
                        <MenuItem x:Name="ImportProfileButton" Header="Import From File..." Click="ImportProfileButton_Click" />
                    </ContextMenu>
                </Button.ContextMenu>
                <Button.Triggers>
                    <EventTrigger SourceName="AddProfileButton" RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AddProfileMenu" Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <sys:Boolean>True</sys:Boolean>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <Button.Content>
                    <Image Height="16" Width="16" Source="/Resources/Add-Document-Icon.png" />
                </Button.Content>
            </Button>
            <Button x:Name="DeleteProfileButton" Click="DeleteProfileButton_Click" Style="{StaticResource ToolBarButton}">
                <Image Height="16" Width="16" Source="/Resources/TrashCan-Icon.png" />
            </Button>
            <ComboBox x:Name="ProfileSelectorControl" 
                      Style="{StaticResource ProfilesComboBoxStyle}"
                      SelectionChanged="ProfileSelectorControl_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button x:Name="AddModsButton" Click="AddModsButton_Click" Style="{StaticResource ToolBarButton}">
                <Image Height="16" Width="16" Source="/Resources/Green_Plus.png" />
            </Button>
            <Button x:Name="RemoveModsButton" Click="RemoveModsButton_Click" Style="{StaticResource ToolBarButton}">
                <Image Height="16" Width="16" Source="/Resources/RedXIcon.png" />
            </Button>
        </ToolBar>
        <DataGrid x:Name="ModListControl" GridLinesVisibility="Horizontal" Margin="0,40,0,0"  Style="{StaticResource DataGridStyle}">
            <DataGrid.Resources>
                <ResourceDictionary>
                    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="MinHeight" Value="64" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="TextBlockStyle" TargetType="TextBlock" >
                        <Setter Property="Padding" Value="10" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                    <Style x:Key="DependenciesIcon" TargetType="Image" >
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=HasMismatchedDependencies}" Value="True">
                                <Setter Property="Source" Value="/Resources/Warning-Icon.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=HasMissingDependencies}" Value="True">
                                <Setter Property="Source" Value="/Resources/Problem-Icon.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=HasIncompatibility}" Value="False">
                                <Setter Property="Source" Value="/Resources/Check-Icon.png" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Height" Value="16" />
                        <Setter Property="Width" Value="16" />
                        <Setter Property="Margin" Value="3" />
                    </Style>
                    <Style x:Key="DependenceiesToolTip" TargetType="ToolTip">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=HasIncompatibility}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=HasIncompatibility}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="MissingDependenciesList" TargetType="ListBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=HasMissingDependencies}" Value="True">
                                <Setter Property="ItemsSource" Value="{Binding Path=MissingDependencies}" />
                                <Setter Property="Height" Value="Auto" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=HasMissingDependencies}" Value="False">
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Style>
                    <Style x:Key="MissingDependenciesText" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=HasMissingDependencies}" Value="True">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Text" Value="Missing Dependencies:" />
                                <Setter Property="Height" Value="Auto" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=HasMissingDependencies}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Padding" Value="5" />
                    </Style>
                    <Style x:Key="MismatchedDependenciesList" TargetType="ListBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=HasMismatchedDependencies}" Value="True">
                                <Setter Property="ItemsSource" Value="{Binding Path=MissingDependencies}" />
                                <Setter Property="Height" Value="Auto" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=HasMismatchedDependencies}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Style>
                    <Style x:Key="MismatchedDependenciesText" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=HasMismatchedDependencies}" Value="True">
                                <Setter Property="Foreground" Value="DarkGoldenrod" />
                                <Setter Property="Text" Value="Mismatched Dependencies:" />
                                <Setter Property="Height" Value="Auto" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=HasMismatchedDependencies}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Padding" Value="5" />
                    </Style>
                </ResourceDictionary>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Icon" MinWidth="64">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Height="64" Width="64" Source="{Binding Path=Icon}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn ElementStyle="{StaticResource TextBlockStyle}" Binding="{Binding Path=Name}"  MinWidth="100" MaxWidth="200" Width="*" >
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Name" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn ElementStyle="{StaticResource TextBlockStyle}" Binding="{Binding Path=Description}" MinWidth="300"  Width="*">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Description" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn ElementStyle="{StaticResource TextBlockStyle}" Binding="{Binding Path=Version}" MinWidth="70">
                    <DataGridTextColumn.Header>
                        <TextBlock Text="Version" />
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridHyperlinkColumn ElementStyle="{StaticResource HyperlinkTextBlock}" Header="Website" Binding="{Binding Path=Website}" MinWidth="64">
                </DataGridHyperlinkColumn>
                <DataGridTemplateColumn Header="Dependencies" MinWidth="64">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image  Style="{StaticResource DependenciesIcon}">
                                <Image.ToolTip>
                                    <ToolTip Style="{StaticResource DependenceiesToolTip}">
                                        <WrapPanel  Orientation="Vertical">
                                            <TextBlock Style="{StaticResource MissingDependenciesText}" />
                                            <ListBox ItemsSource="{Binding Path=MissingDependencies}" Style="{StaticResource MissingDependenciesList}" />
                                            <TextBlock Style="{StaticResource MismatchedDependenciesText}" />
                                            <ListBox ItemsSource="{Binding Path=MismatchedDependencies}" Style="{StaticResource MismatchedDependenciesList}" />
                                        </WrapPanel>
                                    </ToolTip>
                                </Image.ToolTip>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Page>
